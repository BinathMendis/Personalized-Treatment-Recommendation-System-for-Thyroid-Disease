import React, { useRef } from 'react';
import { useLocation, useNavigate } from 'react-router-dom';
import {
  Container, Typography, Box, Button, Paper, Divider, List, ListItem, ListItemIcon,
} from '@mui/material';
import TextField from '@mui/material/TextField';
import WarningIcon from '@mui/icons-material/Warning';
import FiberManualRecordIcon from '@mui/icons-material/FiberManualRecord';
import { jsPDF } from 'jspdf';
import '../style/Risk.css';
import axios from 'axios';

const RiskPage = () => {
  const { state } = useLocation();
  const navigate = useNavigate();
  const reportRef = useRef();

  if (!state) return <Typography>No data found.</Typography>;

  const { inputs, patient } = state;

  const generatePdfReport = () => {
    const doc = new jsPDF();
    const margin = 15;
    const pageWidth = doc.internal.pageSize.width;
    const maxWidth = pageWidth - (margin * 2);
    let yPos = 20;

    // Add title
    doc.setFontSize(18);
    doc.setTextColor(40, 53, 147);
    doc.text("Pregnancy Thyroid Risk Assessment", pageWidth / 2, yPos, { align: 'center' });
    yPos += 15;

    // Add risk level
    doc.setFontSize(16);
    doc.setTextColor(255, 0, 0);
    doc.text("HIGH RISK", pageWidth / 2, yPos, { align: 'center' });
    yPos += 10;
    doc.setFontSize(12);
    doc.setTextColor(0, 0, 0);
    doc.text("This patient shows significant risk factors. Immediate attention recommended.", 
             margin, yPos, { maxWidth });
    yPos += 15;

    // Add patient details section
    doc.setFontSize(14);
    doc.text("Patient Information", margin, yPos);
    yPos += 10;

    doc.setFontSize(12);
    doc.text(`Name: ${patient.name || 'Not provided'}`, margin, yPos);
    doc.text(`Email: ${patient.Email || 'Not provided'}`, margin + 100, yPos);
    yPos += 8;
    
    doc.text(`Age: ${patient.Age || 'Not provided'}`, margin, yPos);
    doc.text(`Gender: ${patient.Gender || 'Not provided'}`, margin + 100, yPos);
    yPos += 15;

    // Add test results
    doc.setFontSize(14);
    doc.text("Test Results", margin, yPos);
    yPos += 10;

    doc.setFontSize(12);
    doc.text(`TPOAb: ${inputs.TPOAb || 'Not provided'}`, margin, yPos);
    doc.text(`TgAb: ${inputs.TgAb || 'Not provided'}`, margin + 70, yPos);
    yPos += 8;
    doc.text(`TSHRAB: ${inputs.TSHRAB || 'Not provided'}`, margin, yPos);
    yPos += 15;

    // Add risk factors
    doc.setFontSize(14);
    doc.text("Risk Factors", margin, yPos);
    yPos += 10;

    doc.setFontSize(12);
    doc.text(`Smoker: ${inputs.Smoker}`, margin, yPos);
    doc.text(`Family History: ${inputs.Family_History}`, margin + 70, yPos);
    yPos += 15;

    // Add recommended actions
    doc.setFontSize(14);
    doc.text("Recommended Actions", margin, yPos);
    yPos += 10;

    const recommendations = [
      '• Schedule a follow-up appointment within 2 weeks',
      '• Consider referral to a high-risk pregnancy specialist',
      '• Monitor thyroid function more frequently',
      '• Counsel patient on lifestyle modifications'
    ];

    doc.setFontSize(12);
    recommendations.forEach(item => {
      if (yPos > doc.internal.pageSize.height - 30) {
        doc.addPage();
        yPos = 20;
      }
      doc.text(item, margin, yPos);
      yPos += 8;
    });

    // Add footer
    doc.setFontSize(10);
    doc.setTextColor(100);
    doc.text("This report was generated by ThyroPulse Pregnancy Risk Assessment", 
      margin, doc.internal.pageSize.height - 20);
    doc.text(`Report generated on: ${new Date().toLocaleString()}`, 
      margin, doc.internal.pageSize.height - 15);
    doc.text("This assessment is for reference only and should be reviewed by a healthcare professional.", 
      margin, doc.internal.pageSize.height - 10, { maxWidth });

    // Save the PDF
    doc.save(`High_Risk_Report_${patient.name || 'Patient'}.pdf`);
  };

  const handleSendEmail = async () => {
  try {
    // Generate PDF and get as base64 data URI
    const doc = new jsPDF();
    const margin = 15;
        const pageWidth = doc.internal.pageSize.width;
        const maxWidth = pageWidth - (margin * 2);
        let yPos = 20;

        // Add title
        doc.setFontSize(18);
        doc.setTextColor(40, 53, 147);
        doc.text("Pregnancy Thyroid Risk Assessment", pageWidth / 2, yPos, { align: 'center' });
        yPos += 15;

        // Add risk level
        doc.setFontSize(16);
        doc.setTextColor(255, 0, 0);
        doc.text("HIGH RISK", pageWidth / 2, yPos, { align: 'center' });
        yPos += 10;
        doc.setFontSize(12);
        doc.setTextColor(0, 0, 0);
        doc.text("This patient shows significant risk factors. Immediate attention recommended.", 
                margin, yPos, { maxWidth });
        yPos += 15;

        // Add patient details section
        doc.setFontSize(14);
        doc.text("Patient Information", margin, yPos);
        yPos += 10;

        doc.setFontSize(12);
        doc.text(`Name: ${patient.name || 'Not provided'}`, margin, yPos);
        doc.text(`Email: ${patient.Email || 'Not provided'}`, margin + 100, yPos);
        yPos += 8;
        
        doc.text(`Age: ${patient.Age || 'Not provided'}`, margin, yPos);
        doc.text(`Gender: ${patient.Gender || 'Not provided'}`, margin + 100, yPos);
        yPos += 15;

        // Add test results
        doc.setFontSize(14);
        doc.text("Test Results", margin, yPos);
        yPos += 10;

        doc.setFontSize(12);
        doc.text(`TPOAb: ${inputs.TPOAb || 'Not provided'}`, margin, yPos);
        doc.text(`TgAb: ${inputs.TgAb || 'Not provided'}`, margin + 70, yPos);
        yPos += 8;
        doc.text(`TSHRAB: ${inputs.TSHRAB || 'Not provided'}`, margin, yPos);
        yPos += 15;

        // Add risk factors
        doc.setFontSize(14);
        doc.text("Risk Factors", margin, yPos);
        yPos += 10;

        doc.setFontSize(12);
        doc.text(`Smoker: ${inputs.Smoker}`, margin, yPos);
        doc.text(`Family History: ${inputs.Family_History}`, margin + 70, yPos);
        yPos += 15;

        // Add recommended actions
        doc.setFontSize(14);
        doc.text("Recommended Actions", margin, yPos);
        yPos += 10;

        const recommendations = [
          '• Schedule a follow-up appointment within 2 weeks',
          '• Consider referral to a high-risk pregnancy specialist',
          '• Monitor thyroid function more frequently',
          '• Counsel patient on lifestyle modifications'
        ];

        doc.setFontSize(12);
        recommendations.forEach(item => {
          if (yPos > doc.internal.pageSize.height - 30) {
            doc.addPage();
            yPos = 20;
          }
          doc.text(item, margin, yPos);
          yPos += 8;
        });

        // Add footer
        doc.setFontSize(10);
        doc.setTextColor(100);
        doc.text("This report was generated by ThyroPulse Pregnancy Risk Assessment", 
          margin, doc.internal.pageSize.height - 20);
        doc.text(`Report generated on: ${new Date().toLocaleString()}`, 
          margin, doc.internal.pageSize.height - 15);
        doc.text("This assessment is for reference only and should be reviewed by a healthcare professional.", 
          margin, doc.internal.pageSize.height - 10, { maxWidth });
    const pdfDataUri = doc.output('datauristring'); // This includes the data: prefix
    
    // Get patient ID - ensure it exists
    const patientID = localStorage.getItem('patient_id');
    if (!patientID) {
      alert('Patient ID not found in localStorage');
      return;
    }

    // Prepare the request data
    const requestData = {
      patientID: patientID,  // Keep consistent naming
      pdfBase64: pdfDataUri  // Send the full data URI
    };

    // Make the request with proper headers
    const response = await axios.post('http://127.0.0.1:5000/send-email', requestData, {
      headers: {
        'Content-Type': 'application/json'
      }
    });

    if (response.data.error) {
      alert('Error: ' + response.data.error);
    } else {
      alert(response.data.message);
    }
  } catch (err) {
    console.error('Full error:', err);
    alert(`Failed to send email: ${err.response?.data?.error || err.message}`);
  }
};

  return (
    <Container maxWidth="md" className="result-container" ref={reportRef}>
      <Paper elevation={3} className="result-card high-risk">
        <Box className="risk-banner high-risk">
          <Box className="risk-content">
            <WarningIcon className="risk-icon" />
            <Typography variant="h5" className="risk-title">High Risk</Typography>
            <Typography variant="body1" className="risk-description">
              This patient shows significant risk factors. Immediate attention recommended.
            </Typography>
          </Box>
        </Box>

        <Typography variant="h4" color="error" align="center" gutterBottom>
          High Risk Prediction
        </Typography>
        <Divider />

        <Typography variant="h6" gutterBottom>Patient Details</Typography>
        <Box className="row info-box">
          <TextField label="Name" value={patient.name} fullWidth disabled margin="normal" />
          <TextField label="Email" value={patient.Email} fullWidth disabled margin="normal" />
        </Box>
        <Box className="row info-box">
          <TextField label="Age" value={patient.Age} fullWidth disabled margin="normal" />
          <TextField label="Gender" value={patient.Gender} fullWidth disabled margin="normal" />
        </Box>

        <Typography variant="h6" gutterBottom>Test Inputs</Typography>
        <Box className="row info-box">
          <TextField label="TPOAb" value={inputs.TPOAb} fullWidth disabled margin="normal" />
          <TextField label="TgAb" value={inputs.TgAb} fullWidth disabled margin="normal" />
        </Box>
        <Box className="row info-box">
          <TextField label="TSHRAb" value={inputs.TSHRAB} fullWidth disabled margin="normal" />
          <TextField label="Smoker" value={inputs.Smoker} fullWidth disabled margin="normal" />
        </Box>
        <Box className="row info-box">
          <TextField label="Family History" value={inputs.Family_History} fullWidth disabled margin="normal" />
        </Box>

        <Typography variant="h6" gutterBottom sx={{ mt: 3 }}>Recommended Actions</Typography>
        <List dense sx={{ padding: '0 30px' }}>
          {[
            'Schedule a follow-up appointment within 2 weeks',
            'Consider referral to a high-risk pregnancy specialist',
            'Monitor thyroid function more frequently',
            'Counsel patient on lifestyle modifications',
          ].map((item, idx) => (
            <ListItem key={idx}>
              <ListItemIcon sx={{ minWidth: '30px' }}>
                <FiberManualRecordIcon sx={{ fontSize: '10px' }} />
              </ListItemIcon>
              {item}
            </ListItem>
          ))}
        </List>

        <Box className="button-group" sx={{ display: 'flex', justifyContent: 'space-between', mt: 2 }}>
          <Box>
            <Button variant="contained" color="error" onClick={() => navigate('/')}>
              Back to Form
            </Button>
            <Button variant="contained" color="primary" sx={{ ml: 2 }} onClick={generatePdfReport}>
              Generate PDF
            </Button>
            <Button variant="contained" color="primary" sx={{ ml: 2 }} onClick={handleSendEmail}>
              Send via Email
            </Button>
          </Box>
        </Box>

        <Typography variant="caption" display="block" align="center" sx={{ mt: 2, color: 'text.secondary' }}>
          Report generated on: {new Date().toLocaleString()}
        </Typography>
        <Typography variant="caption" display="block" align="center" sx={{ mb: 2, color: 'text.secondary' }}>
          This assessment is for reference only and should be reviewed by a healthcare professional.
        </Typography>
      </Paper>
    </Container>
  );
};

export default RiskPage;